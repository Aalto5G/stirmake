- stat cache to avoid repeatedly statting same file; invalidate if tgt built
  - A LRU cache of 256 entries would require 5% of 5020 targets, yet reduce
    87.406% of 97779 lstat() calls, which make 0.76757*87.406 % = 67.090% of
    all system calls.
  - There would be a tree + 2 lists, free-list and LRU-list. Allocation happens
    from free-list. If free-list is empty, evict() operation evicts the oldest
    entry from LRU-list to free-list.

- Option to check heap after every engine invocation to reveal refcnt bugs

- Extra opcodes:
  - path_absolutify

- don't delete targets if the list of cmds is empty? There's no way the target
  is created given an empty list of cmds.

- don't delete rectgtrule targets? or at least those that are within recdep.

- memory leaks

- ".ORDER: a b" statement to specify that if both a and b are built, a
  is built before b

- ".WAIT" dependency so that "a: b .WAIT c" executes b first and c only after
  b has been executed (assuming no other rules would cause c to be executed)

- Use expr0_without_string instead of expr in places where string can be

- fcntl lock for output, gather child-process outputs together

- instead of '%.c' use ''%'.c'

- automated torture test bench

- @listdict(["a","b"],"n",{"rec":1}) == [{"n":"a","rec":1},{"n":"b","rec":1}]

- @detouchrule to README.md

- @elseif and @else to top-level directive syntax

- shortcutting

- Custom errors to strings
