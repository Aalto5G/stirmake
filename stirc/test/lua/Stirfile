@toplevel
@strict

$VALUE = 2
$MORE = [3, 4, 5, {"a": 6}]

@function $LUARULE($x)
  @addrule($x)
@endfunction

@function $FOO($x)
  @stdout("foo\n")
  @dump($x)
  @return $x
@endfunction

%lua{
  print(Abce.getlexval("VALUE"))
  print(Abce.getlexval("MORE")[1])
  print(Abce.getlexval("MORE")[2])
  print(Abce.getlexval("MORE")[3])
  print(Abce.getlexval("MORE")[4]["a"])
  tbl=Abce.makelexcall("FOO", {"a", "b", 3, 4, 5, {6, {a=1, b=2, c=3}}})
  print(tbl[1])
  print(tbl[2])
  print(tbl[3])
  print(tbl[4])
  print(tbl[5])
  print(tbl[6][1])
  print(tbl[6][2]["a"])
  print(tbl[6][2]["b"])
  print(tbl[6][2]["c"])
%}

%lua{

  function sub(a,b)
    return a-b
  end

%}

@call @dump(@luacall("sub", 5, 7, 8))

@call @dump(665)

@phonyrule: 'reallyall': 'all'

%lua{
  print(666)
  -- test=Abce.makelexcall("LUARULE", {tgts={{name="all"}}, attrs={phony=true}})
  print(667)

  function recursive(x)
    print(669)
    Abce.makelexcall("LUARULE", {tgts={{name="all"}}, attrs={phony=true}})
    return 0
  end
%}

@call @luacall("recursive", 5)

@call @dump(668)
